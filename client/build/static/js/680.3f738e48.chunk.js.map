{"version":3,"file":"static/js/680.3f738e48.chunk.js","mappings":"uJAkdO,IA+DMA,EAAc,SAACC,EAAUC,EAAUC,EAAWC,GAIrDH,GAAYC,IACVC,GACFE,YAAW,WACTF,GAAU,EACZ,GALgB,KAOlBE,YAAW,WACTJ,EAASK,UAAUC,IAAI,aACzB,GAXmB,GAYfJ,GACFE,YAAW,WArNV,IAAgBG,KAsNRN,EAASO,UApNpBJ,WAAWG,EAAIF,UAAUC,IAAI,WAAY,KAqNrCN,EAASK,UAAUC,IAAI,cACzB,GAfiB,KAiBfH,GACFC,YAAW,WACTD,GACF,GApBiB,KAuBvB,C","sources":["Tools.js"],"sourcesContent":["import moment from \"moment-timezone\";\r\n//import { Convert } from \"mongo-image-converter\";\r\n\r\nexport function logout() {\r\n  localStorage.setItem(\"token\", null);\r\n}\r\n\r\nexport function VisibilityText(permissionArray = []) {\r\n  let responseArray = [];\r\n\r\n  if (permissionArray.indexOf(\"invited\") > -1) {\r\n    responseArray.push(\"Invitees\");\r\n  }\r\n  if (permissionArray.indexOf(\"anyone with link\") > -1) {\r\n    responseArray.push(\"Anyone w/Code\");\r\n  }\r\n  if (permissionArray.indexOf(\"friends\") > -1) {\r\n    responseArray.push(\"My Friends\");\r\n  }\r\n  if (permissionArray.indexOf(\"organization\") > -1) {\r\n    responseArray.push(`Anyone in Org`);\r\n  }\r\n  if (permissionArray.indexOf(\"group\") > -1) {\r\n    responseArray.push(`Anyone in Group`);\r\n  }\r\n  \r\n  return responseArray;\r\n}\r\n\r\nexport function isMobileTablet() {\r\n  return (\r\n    \"ontouchstart\" in window ||\r\n    navigator.maxTouchPoints > 0 ||\r\n    navigator.msMaxTouchPoints > 0\r\n  );\r\n\r\n}\r\n\r\nexport function urlify(text, callBack) {\r\n  let urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\r\n  //var urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  let resp;\r\n  resp = text.replace(urlRegex, function (url, b, c) {\r\n    var url2 = c === \"www.\" ? \"http://\" + url : url;\r\n    return '<a href=\"' + url2 + '\" target=\"_blank\">' + url + \"</a>\";\r\n  });\r\n  callBack(resp);\r\n}\r\n\r\nexport function UseFetch(url) {\r\n  let response = [];\r\n\r\n  const fetchAbstracts = () => {\r\n    fetch(url, {\r\n      //fetch dates\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => (response = data));\r\n  };\r\n\r\n  fetchAbstracts();\r\n  return response;\r\n}\r\n\r\nexport function addRemoveClass(\r\n  ref = null,\r\n  className = \"\",\r\n  delay = 0,\r\n  callBack = () => null\r\n) {\r\n  if (ref) {\r\n    setTimeout(function () {\r\n      const element = ref.current;\r\n      if (element) {\r\n        element.className = className;\r\n      }\r\n      callBack();\r\n    }, delay);\r\n  }\r\n}\r\n\r\nexport function isValidDate(date) {\r\n  return (\r\n    date &&\r\n    Object.prototype.toString.call(date) === \"[object Date]\" &&\r\n    !isNaN(date)\r\n  );\r\n}\r\n\r\nexport function getDateTagText(dateVal) {\r\n  // returns something like: \"Tomorrow\" or \"Tuesday\" or \"A Week From Tomorrow\"\r\n  // if more than 8 days in future returns date string like \"May 4 2022\"\r\n  // else returns \"Past Event\"\r\n  try {\r\n    const myDate = new Date(dateVal);\r\n    /*  const date = new Date(\r\n       `${\r\n         shortMonthNames[myDate.getMonth()]\r\n       }/${myDate.getDate()}/${myDate.getFullYear()}`\r\n     ); */\r\n    const date = new Date(moment(myDate).format(\"MM/DD/YYYY\"));\r\n    if (!isValidDate(date)) {\r\n      return null;\r\n    }\r\n    const today = new Date();\r\n    const tempDiff = Math.ceil((date - today) / (1000 * 60 * 60 * 24));\r\n    const dayOfWeek = moment(date).format(\"dddd\");\r\n    let result = \"\";\r\n    if (tempDiff < 0) {\r\n      console.log(\"past\");\r\n      result = \"Past Event\";\r\n      return result;\r\n    }\r\n    const dateDiff = Math.ceil((date - today) / (1000 * 60 * 60 * 24));\r\n    switch (dateDiff) {\r\n      case 0:\r\n        result = \"Today\";\r\n        break;\r\n      case 1:\r\n        result = \"Tomorrow\";\r\n        break;\r\n      case 2:\r\n      case 3:\r\n      case 4:\r\n      case 5:\r\n      case 6:\r\n        result = dayOfWeek;\r\n        break;\r\n      case 7:\r\n        result = `Next ${dayOfWeek}`;\r\n        break;\r\n      case 8:\r\n        result = \"A week from tomorrow\";\r\n        break;\r\n      default:\r\n        if (dateDiff > 180) {\r\n          result = moment(date).format(\"MMM-DD-YYYY\");\r\n        } else {\r\n          result = moment(date).format(\"MMMM Do\");\r\n        }\r\n        break;\r\n    }\r\n\r\n    return result.toUpperCase();\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getDayOfWeek(date) {\r\n  const dayOfWeek = new Date(date).getDay();\r\n  return isNaN(dayOfWeek)\r\n    ? null\r\n    : [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ][dayOfWeek];\r\n}\r\n\r\nexport function getQueryParam(strParam) {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  let myParam = \"\";\r\n  if (strParam && strParam.length > 0) {\r\n    myParam = urlParams.get(strParam);\r\n  }\r\n  return myParam;\r\n}\r\n\r\nexport function checkRequired(e, len) {\r\n  const ref = e.target ? e.target : e;\r\n  //check IsNullOrWhiteSpace\r\n  if (\r\n    ref.required &&\r\n    (ref.value == null ||\r\n      ref.value.match(/^\\s*$/) !== null ||\r\n      (len !== null && ref.value.length < len))\r\n  ) {\r\n    ref.classList.add(\"required\");\r\n    return false;\r\n  } else {\r\n    ref.classList.remove(\"required\");\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function getFormModel(myForm, myModel, setLoading) {\r\n  let model = myModel;\r\n  for (let i = 0; i < myForm.length; i++) {\r\n    let el = myForm[i];\r\n    let key = el.name;\r\n    let obj = {};\r\n    if (key.length > 0) {\r\n      if (!checkRequired(el)) {\r\n        if (setLoading) {\r\n          setLoading(false);\r\n        }\r\n        return false;\r\n      }\r\n      obj[key] = el.value;\r\n      model = {\r\n        ...model,\r\n        [key]: el.value,\r\n      };\r\n    }\r\n  }\r\n  return model;\r\n}\r\n\r\n\r\n\r\nexport function validateEmail(email) {\r\n  const re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(email);\r\n}\r\n\r\nexport function validateDomain(domain) {\r\n  const re =\r\n    /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  return re.test(domain);\r\n}\r\n\r\nexport function extractDomain(domain) {\r\n  const re = /^(?:https?:\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^:?\\n]+)$/;\r\n  return re.exec(domain);\r\n}\r\n\r\nexport function strengthChecker({ strengthDisp, matchDisp, newPassword }) {\r\n  const strengthBadge = strengthDisp;\r\n  const matchBadge = matchDisp;\r\n  const PasswordParameter = newPassword;\r\n  const strongPassword = new RegExp(\r\n    \"(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})\"\r\n  );\r\n  const mediumPassword = new RegExp(\r\n    \"((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,}))|((?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])(?=.{8,}))\"\r\n  );\r\n\r\n  if (PasswordParameter.length > 0) {\r\n    if (strongPassword.test(PasswordParameter)) {\r\n      strengthBadge.style.color = \"green\";\r\n      strengthBadge.textContent = \"Strong. Excellent!\";\r\n      matchBadge.style.color = \"green\";\r\n      return true;\r\n    } else if (mediumPassword.test(PasswordParameter)) {\r\n      strengthBadge.style.color = \"blue\";\r\n      strengthBadge.textContent = \"Medium. Okay.\";\r\n      matchBadge.style.color = \"blue\";\r\n      return true;\r\n    } else {\r\n      strengthBadge.style.color = \"red\";\r\n      strengthBadge.textContent = \"Too weak.\";\r\n      return false;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function strengthChecks({\r\n  strengthDisp,\r\n  matchDisp,\r\n  newPassword,\r\n  lengthBox,\r\n  upperBox,\r\n  numBox,\r\n  symbBox,\r\n}) {\r\n  const strengthBadge = strengthDisp;\r\n  const matchBadge = matchDisp;\r\n  const PasswordParameter = newPassword;\r\n  const hasUpper = new RegExp(\"(?=.*[A-Z])\");\r\n  const hasNum = new RegExp(\"(?=.*[0-9])\");\r\n  const hasSymb = new RegExp(\"(?=.*[^A-Za-z0-9])\");\r\n  const strongPassword = new RegExp(\r\n    \"(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})\"\r\n  );\r\n  const mediumPassword = new RegExp(\r\n    \"((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,}))|((?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])(?=.{8,}))\"\r\n  );\r\n\r\n  const checkBox = (reg, ref) => {\r\n    if (reg.test(PasswordParameter)) {\r\n      ref.classList.add(\"good\");\r\n    } else {\r\n      ref.classList.remove(\"good\");\r\n    }\r\n  };\r\n\r\n  if (PasswordParameter.length > 0) {\r\n    if (PasswordParameter.length > 7) {\r\n      lengthBox.classList.add(\"good\");\r\n    } else {\r\n      lengthBox.classList.remove(\"good\");\r\n    }\r\n    checkBox(hasUpper, upperBox);\r\n    checkBox(hasNum, numBox);\r\n    checkBox(hasSymb, symbBox);\r\n\r\n    if (strongPassword.test(PasswordParameter)) {\r\n      strengthBadge.style.color = \"green\";\r\n      strengthBadge.title = \"Strong. Excellent!\";\r\n      matchBadge.style.color = \"green\";\r\n      return true;\r\n    } else if (mediumPassword.test(PasswordParameter)) {\r\n      strengthBadge.style.color = \"blue\";\r\n      strengthBadge.title = \"Medium. Okay.\";\r\n      matchBadge.style.color = \"blue\";\r\n      return true;\r\n    } else {\r\n      strengthBadge.style.color = \"red\";\r\n      strengthBadge.title = \"Too weak.\";\r\n      return false;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function fadeIn(ref) {\r\n  if (ref) {\r\n    setTimeout(ref.classList.add(\"fade-in\"), 400);\r\n  }\r\n}\r\n\r\nexport function copyInputText(ref, copyButtonRef, copyMessageRef) {\r\n  const myLink = ref.current;\r\n  myLink.disabled = false;\r\n  myLink.select();\r\n  myLink.setSelectionRange(0, 99999); /* For mobile devices */\r\n  document.execCommand(\"copy\");\r\n  if (window.getSelection) {\r\n    window.getSelection().removeAllRanges();\r\n  } else if (document.selection) {\r\n    document.selection.empty();\r\n  }\r\n  myLink.disabled = true;\r\n  if (copyButtonRef && copyMessageRef) {\r\n    copyButtonRef.current.classList.add(\"hidden\");\r\n    copyMessageRef.current.classList.remove(\"hidden\");\r\n    setTimeout(() => {\r\n      copyButtonRef.current.classList.remove(\"hidden\");\r\n      copyMessageRef.current.classList.add(\"hidden\");\r\n    }, 2000);\r\n  }\r\n}\r\n\r\nexport function grabVScroll(el) {\r\n  const slider = el;\r\n  let isDown = false;\r\n  let startX;\r\n  let scrollLeft;\r\n\r\n  slider.addEventListener(\"mousedown\", (e) => {\r\n    isDown = true;\r\n    slider.classList.add(\"grabbing\");\r\n    startX = e.pageX - slider.offsetLeft;\r\n    scrollLeft = slider.scrollLeft;\r\n  });\r\n  slider.addEventListener(\"mouseleave\", () => {\r\n    isDown = false;\r\n    slider.classList.remove(\"grabbing\");\r\n  });\r\n  slider.addEventListener(\"mouseup\", () => {\r\n    isDown = false;\r\n    slider.classList.remove(\"grabbing\");\r\n  });\r\n  slider.addEventListener(\"mousemove\", (e) => {\r\n    if (!isDown) return;\r\n    e.preventDefault();\r\n    const x = e.pageX - slider.offsetLeft;\r\n    const walk = (x - startX) * 3; //scroll-fast\r\n    slider.scrollLeft = scrollLeft - walk;\r\n  });\r\n}\r\n\r\nexport function grabVScrollH(el) {\r\n  const slider = el;\r\n  let isDown = false;\r\n  let startY;\r\n  let scrollTop;\r\n\r\n  slider.addEventListener(\"mousedown\", (e) => {\r\n    isDown = true;\r\n    slider.classList.add(\"grabbing\");\r\n    startY = e.pageY - slider.offsetTop;\r\n    scrollTop = slider.scrollTop;\r\n  });\r\n  slider.addEventListener(\"mouseleave\", () => {\r\n    isDown = false;\r\n    slider.classList.remove(\"grabbing\");\r\n  });\r\n  slider.addEventListener(\"mouseup\", () => {\r\n    isDown = false;\r\n    slider.classList.remove(\"grabbing\");\r\n  });\r\n  slider.addEventListener(\"mousemove\", (e) => {\r\n    if (!isDown) return;\r\n    e.preventDefault();\r\n    const y = e.pageY - slider.offsetTop;\r\n    const walk = (y - startY) * 3; //scroll-fast\r\n    slider.scrollTop = scrollTop - walk;\r\n  });\r\n}\r\n\r\nexport async function shareLink(link, title, message) {\r\n  try {\r\n    const shareData = {\r\n      title: title || \"Radish\",\r\n      text: message || \"Join me on Radish\",\r\n      url: link,\r\n    };\r\n    await navigator.share(shareData);\r\n  } catch (err) {\r\n    console.log(`Share error: ${err.message}`);\r\n  }\r\n}\r\n\r\nexport function eachWordToUpper(sentence) {\r\n  try {\r\n    return sentence.replace(/\\w\\S*/g, function (txt) {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1);\r\n    });\r\n  } catch (err) {\r\n    return sentence;\r\n  }\r\n}\r\n\r\nexport function parseStandardTime(time) {\r\n  try {\r\n    time = time.split(\":\"); // convert to array\r\n\r\n    // fetch\r\n    let hours = Number(time[0]);\r\n    let minutes = Number(time[1]);\r\n\r\n    // calculate\r\n    let timeValue;\r\n\r\n    if (hours > 0 && hours <= 12) {\r\n      timeValue = \"\" + hours;\r\n    } else if (hours > 12) {\r\n      timeValue = \"\" + (hours - 12);\r\n    } else if (hours === 0) {\r\n      timeValue = \"12\";\r\n    }\r\n\r\n    timeValue += minutes < 10 ? \":0\" + minutes : \":\" + minutes; // get minutes\r\n    timeValue += hours >= 12 ? \" PM\" : \" AM\"; // get AM/PM\r\n    return timeValue;\r\n  } catch {\r\n    return time;\r\n  }\r\n}\r\n\r\nexport const shortDateTime = (date) => {\r\n  // returns friendly short date time string\r\n  // ex: Wed Jul 28 2021 5:00 PM\r\n  return date\r\n    ? new Date(date).toDateString() +\r\n    \" \" +\r\n    parseStandardTime(\r\n      `${new Date(date).getHours().toString().padStart(2, \"0\")}:00`\r\n    )\r\n    : null;\r\n};\r\n\r\nexport const daySpread = (date1, date2) => {\r\n  // returns difference in days between two dates\r\n  const d1 = new Date(date1);\r\n  const d2 = new Date(date2);\r\n  const diffTime = Math.abs(d2 - d1);\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  return diffDays;\r\n};\r\n\r\nexport const monthNames = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nexport const shortMonthNames = [\r\n  \"JAN\",\r\n  \"FEB\",\r\n  \"MAR\",\r\n  \"APR\",\r\n  \"MAY\",\r\n  \"JUN\",\r\n  \"JUL\",\r\n  \"AUG\",\r\n  \"SEP\",\r\n  \"OCT\",\r\n  \"NOV\",\r\n  \"DEC\",\r\n];\r\n\r\nexport const dayNames = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nexport const shortDayNames = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\r\n\r\nexport const slideScreen = (outerRef, innerRef, fnLoading, callBack) => {\r\n  const outerRefTime = 0;\r\n  const innerRefTime = 700;\r\n  const loadingTime = 500;\r\n  if (outerRef && innerRef) {\r\n    if (fnLoading) {\r\n      setTimeout(() => {\r\n        fnLoading(false);\r\n      }, loadingTime);\r\n    }\r\n    setTimeout(() => {\r\n      outerRef.classList.add(\"slide-left\");\r\n    }, outerRefTime);\r\n    if (fnLoading) {\r\n      setTimeout(() => {\r\n        fadeIn(innerRef.current);\r\n        outerRef.classList.add(\"transparent\");\r\n      }, innerRefTime);\r\n    }\r\n    if (callBack) {\r\n      setTimeout(() => {\r\n        callBack();\r\n      }, innerRefTime);\r\n    }\r\n  }\r\n};\r\n\r\nexport function uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function priceLevel(level) {\r\n  let resp = \"\";\r\n  for (let i = 0; i < level; i++) {\r\n    resp = resp + \"$\";\r\n  }\r\n  return resp;\r\n}\r\n\r\nexport const getAllFriends = async (data, setAllFriends, setErrMessage) => {\r\n  try {\r\n    let allFriendsGroup = {};\r\n    allFriendsGroup = [\r\n      {\r\n        ...allFriendsGroup,\r\n        group_id: \"all\",\r\n        group_name: \"All Friends\",\r\n        membersCount: data.length,\r\n        group_members: data,\r\n      },\r\n    ];\r\n    setAllFriends(allFriendsGroup);\r\n  } catch (err) {\r\n    setErrMessage(\"Snap! There was an error creating  All-Friends list.\");\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const getNiceDate = (date) => {\r\n  if (date) {\r\n    const today = new Date().toLocaleDateString();\r\n    const returnDate = new Date(date).toLocaleDateString();\r\n    if (returnDate === today) {\r\n      return \"Today\";\r\n    } else {\r\n      return returnDate;\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const maxEventDate = (event) => {\r\n  // takes all the possible proposed (and final) dates for an event\r\n  // and returns the max possible date. If there is a final date,\r\n  // return final date even if not the max.\r\n  try {\r\n    const date1 = event.proposed_date1 ? new Date(event.proposed_date1) : null;\r\n    const date2 = event.proposed_date2 ? new Date(event.proposed_date2) : null;\r\n    const finaldate = event.final_start_date\r\n      ? new Date(event.final_start_date)\r\n      : null;\r\n    const time1 = event.proposed_time1\r\n      ? Date.parse(`01/01/1999 ${event.proposed_time1}`)\r\n      : null;\r\n    const time2 = event.proposed_time2\r\n      ? Date.parse(`01/01/1999 ${event.proposed_time2}`)\r\n      : null;\r\n    let maxDate = new Date();\r\n    if (finaldate) {\r\n      maxDate = finaldate;\r\n    } else if (date1 && date2) {\r\n      maxDate = new Date(Math.max(date1, date2));\r\n    } else if (date1) {\r\n      maxDate = date1;\r\n    } else {\r\n      maxDate = null;\r\n    }\r\n    if (!maxDate) {\r\n      return null;\r\n    }\r\n    let maxTime = new Date();\r\n    if (time1 && time2) {\r\n      maxTime = new Date(Math.max(time1, time1));\r\n    } else if (time1) {\r\n      maxTime = new Date(time1);\r\n    } else if (time2) {\r\n      maxTime = new Date(time2);\r\n    } else {\r\n      maxTime = null;\r\n    }\r\n    const maxDateString = `${maxDate.getMonth() + 1\r\n      }/${maxDate.getDate()}/${maxDate.getFullYear()}`;\r\n    const maxTimeString = `${maxTime\r\n      ? maxTime.getHours().toLocaleString(\"en-US\", {\r\n        minimumIntegerDigits: 2,\r\n        useGrouping: false,\r\n      }) +\r\n      \":\" +\r\n      maxTime.getMinutes().toLocaleString(\"en-US\", {\r\n        minimumIntegerDigits: 2,\r\n        useGrouping: false,\r\n      })\r\n      : \"00:00\"\r\n      }`;\r\n    const officialMaxDate = `${maxDateString} ${maxTimeString}`;\r\n    return new Date(officialMaxDate);\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const calcRSVPDeadline = (event, days) => {\r\n  // takes all event proposed date time options,\r\n  // figures out the max possible\r\n  // subtracts days from max to get response rsvp deadline\r\n  // returns full iso date string, ex: Wed Jul 28 2021 17:00:00 GMT-0400 (Eastern Daylight Time)\r\n  try {\r\n    const maxDate = maxEventDate(event);\r\n    if (!maxDate) {\r\n      return null;\r\n    }\r\n    let returnDate = new Date(maxDate);\r\n    returnDate = new Date(returnDate.setDate(returnDate.getDate() - days));\r\n    return returnDate.toString();\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nexport const forceLower = (refCurrent) => {\r\n  refCurrent.value = refCurrent.value.toLowerCase();\r\n};\r\n\r\nexport const getBase64FromUrl = async (url) => {\r\n  const data = await fetch(url);\r\n  const blob = await data.blob();\r\n  return new Promise((resolve) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(blob);\r\n    reader.onloadend = () => {\r\n      const base64data = reader.result;\r\n      resolve(base64data);\r\n    };\r\n  });\r\n};\r\n\r\nexport const getEventUserStatus = (eventData) => {\r\n  //This helper function returns a display status / tag to event or event cards.\r\n  let rsvpStatus = eventData.inviteeRec?.rsvp_status || \"sent\";\r\n  let displayStatus = !eventData.status ? \"Draft\" : eventData.status;\r\n\r\n  //Valid Result Status: \"Declined\", \"DRAFT\", \"Going\", \"Locked\", \"MAYBE\", \"LIKELY\", \"RSVP\", \"VOTE\"\r\n  if (!eventData.pastEvent) {\r\n    // Event not in the past\r\n    switch (displayStatus) {\r\n      case \"Draft\": //Result: \"DRAFT\"\r\n        displayStatus = \"DRAFT\";\r\n        break;\r\n      case \"Voting\": //Result: \"LIKELY\", \"MAYBE\" or \"VOTE\"\r\n        displayStatus =\r\n          rsvpStatus === \"likely\" ||\r\n            rsvpStatus === \"maybe\" ||\r\n            rsvpStatus === \"virtually\"\r\n            ? eachWordToUpper(rsvpStatus)\r\n            : rsvpStatus === \"yes\"\r\n              ? `Going${rsvpStatus === \"virtually\" ? \" Virtually\" : \"\"}`\r\n              : rsvpStatus === \"no\"\r\n                ? \"You Declined\"\r\n                : rsvpStatus === \"remote\" || rsvpStatus === \"present\"\r\n                  ? \"You Attended\"\r\n                  : rsvpStatus === \"absent\"\r\n                    ? \"You Did Not Attend\"\r\n                    : \"Please VOTE\";\r\n        break;\r\n      case \"RSVP\": //Result:  \"RSVP\", \"Going\", \"Declined\"  (Why not all UPPER CASE?)\r\n        displayStatus =\r\n          rsvpStatus === \"sent\" ||\r\n            rsvpStatus === \"maybe\" ||\r\n            rsvpStatus === \"likely\" ||\r\n            rsvpStatus === \"opened\"\r\n            ? \"Please RSVP\"\r\n            : rsvpStatus === \"yes\" || rsvpStatus === \"virtually\"\r\n              ? `Going${rsvpStatus === \"virtually\" ? \" Virtually\" : \"\"}`\r\n              : rsvpStatus === \"no\"\r\n                ? \"You Declined\"\r\n                : rsvpStatus === \"remote\" || rsvpStatus === \"present\"\r\n                  ? \"You Attended\"\r\n                  : \"You Did Not Attend\";\r\n        break;\r\n      case \"Locked\": //Result: \"Going\", \"Declined\", \"Locked\"  (Why not all UPPER CASE?)\r\n        displayStatus =\r\n          rsvpStatus === \"yes\" || rsvpStatus === \"virtually\"\r\n            ? `Going${rsvpStatus === \"virtually\" ? \" Virtually\" : \"\"}`\r\n            : rsvpStatus === \"no\"\r\n              ? \"You Declined\"\r\n              : rsvpStatus === \"remote\" || rsvpStatus === \"present\"\r\n                ? \"You Attended\"\r\n                : \"You Did Not Attend\";\r\n        break;\r\n      default:\r\n        //Result: DRAFT\r\n        displayStatus = \"DRAFT\";\r\n        break;\r\n    }\r\n  } else {\r\n    //Event is in past, deal with tags\r\n    //TODO: [RAD-470] Determine what TAG to return to the event when the event is in the past.\r\n\r\n    displayStatus = \"PAST\";\r\n  }\r\n  return displayStatus;\r\n};\r\n\r\nexport const getEventFinalDisplayDate = (finalStartDate, finalEndDate) => {\r\n  let returnDisplay = \"\";\r\n  let tempStart = moment(finalStartDate)\r\n    //.tz(moment.tz.guess())\r\n    .format(\"ddd, MMM Do [from] h:mm a\");\r\n  let sameDay = moment(moment(finalStartDate).format(\"YYYY-MM-DD\")).isSame(\r\n    moment(finalEndDate).format(\"YYYY-MM-DD\"),\r\n    \"day\"\r\n  );\r\n  let sameMonth = moment(moment(finalStartDate).format(\"YYYY-MM-DD\")).isSame(\r\n    moment(finalEndDate).format(\"YYYY-MM-DD\"),\r\n    \"month\"\r\n  );\r\n  let tempEnd = moment(finalEndDate).format(\"[ to ] h:mm a\");\r\n  if (!sameDay && !sameMonth) {\r\n    tempEnd = moment(finalEndDate).format(\"[ to ] ddd, MMM Do [ at ] h:mm a\");\r\n  } else if (!sameDay) {\r\n    // is same month\r\n    tempEnd = moment(finalEndDate).format(\r\n      \"[ to ] ddd [ the ] Do [ at ]  h:mm a\"\r\n    );\r\n  }\r\n  returnDisplay = tempStart + tempEnd;\r\n  return returnDisplay;\r\n};\r\nexport const getEventDisplayDate = (eventData, short) => {\r\n  let returnArray = [];\r\n  let strTemp = \"\";\r\n  /*  if (eventData.final_start_date && !short) {\r\n     returnArray.push(\r\n       getEventFinalDisplayDate(\r\n         eventData.final_start_date,\r\n         eventData.final_end_date\r\n       )\r\n     );\r\n     return returnArray;\r\n   } */\r\n  const formatProposedDate = (dtDate, dtEndDate, genTime) => {\r\n    strTemp = moment(dtDate).format(\r\n      `${short ? \"dddd, MMM Do\" : \"dddd, MMMM Do\"}`\r\n    );\r\n    if (genTime) {\r\n      strTemp += ` in the ${genTime}`;\r\n    } else {\r\n      if (!short) {\r\n        strTemp += ` from ${moment(dtDate).format(\r\n          \"h:mm a\"\r\n        )} to `;\r\n        if (\r\n          moment(dtDate).format(\"YYYYDDD\") !== moment(dtEndDate).format(\"YYYYDDD\")\r\n        ) {\r\n          //is multi-day\r\n          strTemp += `${moment(dtEndDate).format(\r\n            `${short ? \"ddd, MMM Do\" : \"dddd, MMMM Do\"} [ at ] h:mm a`\r\n          )}`;\r\n        } else {\r\n          // is NOT multi-day\r\n          strTemp += moment(dtEndDate).format(\"h:mm a\");\r\n        }\r\n      } else {\r\n        strTemp += ` at ${moment(dtDate).format(\"h:mm a\")}`;\r\n      }\r\n\r\n    }\r\n    returnArray.push(strTemp);\r\n  };\r\n  if (eventData.final_start_date) {\r\n    formatProposedDate(\r\n      eventData.final_start_date,\r\n      eventData.final_end_date,\r\n    );\r\n  } else {\r\n    if (eventData.proposed_date1) {\r\n      formatProposedDate(\r\n        eventData.proposed_date1,\r\n        eventData.proposed_end_date1,\r\n        eventData.proposed_general1\r\n      );\r\n    }\r\n    if (eventData.proposed_date2) {\r\n      formatProposedDate(\r\n        eventData.proposed_date2,\r\n        eventData.proposed_end_date2,\r\n        eventData.proposed_general2\r\n      );\r\n    }\r\n  }\r\n  return returnArray;\r\n};\r\n"],"names":["slideScreen","outerRef","innerRef","fnLoading","callBack","setTimeout","classList","add","ref","current"],"sourceRoot":""}